name: Update dependencies packages

on:
  workflow_dispatch:
    inputs:
      exec-from:
        description: "The project/user to execute from"
        required: false
        default: None

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Create new branch
        run: hub checkout -b dependencies-update-${{ steps.date.outputs.date }}

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.5.0
        with:
          node-version: 16

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.7
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn

      - name: Update dependencies
        run: |
          yarn add --dev yarn-upgrade-all
          yarn yarn-upgrade-all
          yarn remove yarn-upgrade-all

      - name: Run linter 👀
        run: yarn lint

      - name: Run compile 🏗️
        run: yarn compile

      - name: Set git config
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Is modified
        id: is-modified
        run: |
          git status | grep modified
          echo "::set-output name=modified::`echo $?`"

      - name: Create pull request
        if: ${{ steps.is-modified.outputs.modified == '0' }}
        run: |
          hub add -A
          hub commit -m "chore: Update dependencies packages"
          hub push --set-upstream origin dependencies-update-${{ steps.date.outputs.date }}
          echo -e "Update dependencies packages\n\n" > description.md
          echo "Executed from ${{ github.event.inputs.exec-from }}" >> description.md
          hub pull-request -b master -F description.md -r ${{ github.event.sender.login }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
